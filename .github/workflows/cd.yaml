name: Continuous Deployment

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REGION: us-central1
      REPOSITORY: notely-ar-repo
      IMAGE: notely
      TAG: ${{ github.sha }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install Goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Secret check (diff-only)
        run: |
          set -euo pipefail
          BASE="${{ github.event.before }}"
          HEAD="${{ github.sha }}"
          git fetch --no-tags --prune --depth=2 origin
          echo "Scanning diff $BASE..$HEAD for common secretsâ€¦"
          if git diff "$BASE" "$HEAD" | grep -E -i \
            '(password|secret|api[_-]?key|token|DATABASE_URL|mongodb(\+srv)?:\/\/|postgres:\/\/|mysql:\/\/|BEGIN [A-Z ]*PRIVATE KEY)' >/dev/null; then
            echo "ðŸš« Potential secret found in diff. Fix it before pushing."
            exit 1
          fi
          echo "âœ… No obvious secrets in diff."

      - name: Secret scan (gitleaks)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        
      - name: Build app (production)
        run: bash scripts/buildprod.sh

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Build & push image to Artifact Registry
        run: |
          gcloud builds submit \
            --tag "${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ env.TAG }}" .

      - name: Migrate DB
        run: ./scripts/migrateup.sh

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy notely \
            --image "${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ env.TAG }}" \
            --region "${{ env.REGION }}" \
            --project "${{ secrets.PROJECT_ID }}" \
            --allow-unauthenticated \
            --max-instances=4 \
